{"version":3,"file":"static/js/850.7a1d6bdb.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","components/BlockForContacts/BlockForContacts.jsx","redux/contacts/contactsSelector.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"input\":\"ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nimport s from './ContactForm.module.css';\nimport { addContacts } from 'redux/contacts/contactsOperations';\nimport {\n  getStateItems,\n  getStateLoading,\n} from 'redux/contacts/contactsSelector';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getStateItems);\n  const isLoading = useSelector(getStateLoading);\n  const dispatch = useDispatch();\n\n  const handleChangeInput = e => {\n    const input = e.target;\n\n    input.name === 'name' && setName(input.value);\n    input.name === 'number' && setNumber(input.value);\n  };\n\n  const handleFormCompilation = e => {\n    e.preventDefault();\n    const check = contacts.find(\n      el => el.name.toLowerCase() === name.toLowerCase()\n    );\n    if (!check) {\n      dispatch(addContacts({ name, number }));\n      setName('');\n      setNumber('');\n    } else {\n      Report.failure('Error', name + 'is already in contacts', 'Okay');\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={handleFormCompilation} className={s.form}>\n        <label className={s.label}>\n          <input\n            type=\"text\"\n            name=\"name\"\n            className={s.input}\n            placeholder=\"Name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={handleChangeInput}\n          />\n        </label>\n        <label className={s.label}>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            className={s.input}\n            placeholder=\"Number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            onChange={handleChangeInput}\n          />\n        </label>\n        <button className={s.btn} type=\"submit\" disabled={isLoading}>\n          {isLoading ? 'Loading...' : 'Add contact'}\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__N7T3z\",\"title\":\"Filter_title__pSkfx\"};","import { useDispatch, useSelector } from 'react-redux';\nimport s from './Filter.module.css';\nimport { changeFilter } from '../../redux/contacts/contactsSlice';\nimport { getStateFilter } from 'redux/contacts/contactsSelector';\n\nconst Filter = () => {\n  const value = useSelector(getStateFilter);\n\n  const dispatch = useDispatch();\n  return (\n    <>\n      <p className={s.title}>Find contacts by name</p>\n      <input\n        type=\"text\"\n        placeholder=\"Enter name\"\n        className={s.input}\n        name=\"filter\"\n        value={value}\n        onChange={e => dispatch(changeFilter(e.target.value))}\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\n\nconst BlockForContacts = () => {\n  return (\n    <>\n      <ContactForm />\n      <Filter />\n    </>\n  );\n};\nexport default BlockForContacts;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getStateItems = state => state.contacts.items;\nexport const getStateFilter = state => state.contacts.filter;\nexport const getStateLoading = state => state.contacts.isLoading;\n\nexport const contactsAfterFilter = createSelector(\n  [getStateItems, getStateFilter],\n  (items, filter) => {\n    const newItems = items.filter(item =>\n      item.name.toLowerCase().includes(filter.toLocaleLowerCase())\n    );\n    return newItems;\n  }\n);\n"],"names":["_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","contacts","useSelector","getStateItems","isLoading","getStateLoading","dispatch","useDispatch","handleChangeInput","e","input","target","value","_jsx","_Fragment","children","_jsxs","onSubmit","preventDefault","find","el","toLowerCase","Report","addContacts","className","s","type","placeholder","pattern","title","required","onChange","disabled","getStateFilter","changeFilter","ContactForm","Filter","state","items","filter","contactsAfterFilter","createSelector","item","includes","toLocaleLowerCase"],"sourceRoot":""}